cmake_minimum_required(VERSION 3.24.202208181.0)
set(CMAKE_MODULE_PATH "C:/Users/Joe/source/repos/Jreatc7/curl/CMake;")
cmake_policy(SET CMP0091 NEW)
cmake_policy(SET CMP0126 OLD)
project(CMAKE_TRY_COMPILE C)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_C_FLAGS_DEBUG "/Zi /Ob0 /Od /RTC1")
set(CMAKE_EXE_LINKER_FLAGS "/machine:x64")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[ -D_WIN32_WINNT=0x0600 -D_WINSOCKAPI_=]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "C:/Users/Joe/source/repos/Jreatc7/curl/out/build/x64-debug/CMakeFiles/CMakeTmp")
add_executable(cmTC_c9b9e "C:/Users/Joe/source/repos/Jreatc7/curl/out/build/x64-debug/CMakeFiles/CheckIncludeFiles/HAVE_SSL_H.c")
target_link_libraries(cmTC_c9b9e ${LINK_LIBRARIES})
